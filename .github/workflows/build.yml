name: build

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        build_type: [RelWithDebInfo]
        enable_ui: [ on ]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1
      if: runner.os == 'Linux'
      with:
        key: ${{ matrix.os }}-${{ matrix.enable_ui }}

    - uses: seanmiddleditch/gha-setup-ninja@master

    - uses: ilammy/msvc-dev-cmd@v1
      if: runner.os == 'Windows'

    - name: Install Dependencies
      shell: bash
      run: |
        if [[ "${{ runner.os }}" == "Linux" ]] ; then
          sudo apt-get update -qq
          sudo apt-get install -y \
            g++ clang-10 libc++-10-dev libc++abi-10-dev cmake ninja-build libx11-dev \
            libxcursor-dev libxi-dev libgl1-mesa-dev libfontconfig1-dev unzip
        fi

    - name: Get skia
      shell: bash
      run: |
        mkdir -p build/skia
        powershell.exe -File get_skia.ps1

    - name: Generating Makefiles
      shell: bash
      run: |
        if [[ "${{ runner.os }}" == "Windows" ]] ; then
          export enable_ccache=off
        else
          export enable_ccache=on
        fi
        #./patch_version.sh ${GITHUB_REF_NAME:1}
        cmake -S . -B build -G Ninja \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9 \
          -DENABLE_TESTS=ON \
          -DENABLE_UI=${{ matrix.enable_ui }} \
          -DENABLE_CCACHE=$enable_ccache \
          -DLAF_BACKEND=skia -DSKIA_DIR=./build/skia  -DSKIA_LIBRARY_DIR=./build/skia/out/Release-x64 -DSKIA_LIBRARY=./build/skia/out/Release-x64/skia.lib \
          -DVERSION=${GITHUB_REF_NAME:1}

    - name: Compiling
      shell: bash
      run: |
        cd build && ninja

    - name: Publish
      shell: bash
      env:
        GITEA_API_KEY: ${{ secrets.GITEA_API_KEY }}
      run: |
        cd build/bin

        tar -czvf aseprite.windows.tar.gz aseprite* data/

        pip install requests
        python3 ../../push_gitea_package.py aseprite.windows.tar.gz ${GITHUB_REF_NAME}
